package neqsim.process.safety;

import java.io.Serializable;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * Describes a simultaneous relief load case generated by the process safety analyser.
 */
public class ProcessSafetyLoadCase implements Serializable {
  private static final long serialVersionUID = 1L;

  private final String name;
  private final Map<String, ReliefSourceLoad> reliefLoads = new LinkedHashMap<>();

  public ProcessSafetyLoadCase(String name) {
    this.name = name;
  }

  public String getName() {
    return name;
  }

  public void addReliefSource(String sourceId, ReliefSourceLoad load) {
    reliefLoads.put(sourceId, load);
  }

  public Map<String, ReliefSourceLoad> getReliefLoads() {
    return Collections.unmodifiableMap(reliefLoads);
  }

  /**
   * Relief load contribution for a source into the disposal network.
   */
  public static class ReliefSourceLoad implements Serializable {
    private static final long serialVersionUID = 1L;

    private final double massRateKgS;
    private final Double heatDutyW;
    private final Double molarRateMoleS;

    public ReliefSourceLoad(double massRateKgS, Double heatDutyW, Double molarRateMoleS) {
      this.massRateKgS = massRateKgS;
      this.heatDutyW = heatDutyW;
      this.molarRateMoleS = molarRateMoleS;
    }

    public double getMassRateKgS() {
      return massRateKgS;
    }

    public Double getHeatDutyW() {
      return heatDutyW;
    }

    public Double getMolarRateMoleS() {
      return molarRateMoleS;
    }
  }
}
